{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","app/correction/Correction.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","_slicedToArray","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","defaultBay","rise","Correction","useState","round","setRound","coefficient_of_thermal","youngmodulus","density","area","radius_of_the_earth","g","consts","setConsts","field_tension","standard_tension","field_tem","standard_tem","above_sea_level","data","setData","bays","setBays","totalLength","setTotalLength","tapeWeight","setTapeWeight","slopCorr","setSlopCorr","tensionCorr","setTensionCorr","tempCorr","setTempCorr","sagCorr","setSagCorr","attrCorr","setAttrCorr","corrLength","setCorrLength","handleconstChange","e","persist","target","name","handleDataChange","handleBayChange","id","values","console","log","useEffect","reduce","total","current","Number","slop","Math","pow","toFixed","tenstion","temp","cube","sag","attr","className","keys","map","key","Group","htmlFor","Control","type","onChange","placeholder","style","backgroundColor","color","onClick","item","aria-label","filter","b_id","handleRemove"],"mappings":"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","file":"static/js/10.1022e8ba.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useState, useEffect } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\n\r\nconst defaultBay = { length: 0, rise: 0 }\r\n\r\nconst Correction = () => {\r\n    const [round, setRound] = useState(4)\r\n    const [consts, setConsts] = useState({ coefficient_of_thermal: 0.000013, youngmodulus: 209000, density: 6900, area: 5, radius_of_the_earth: 6367, g: 9.81 })\r\n    const [data, setData] = useState({ field_tension: 75, standard_tension: 90, field_tem: 28, standard_tem: 22.5, above_sea_level: 33.7 })\r\n    const [bays, setBays] = useState([{ ...defaultBay }])\r\n    // const [bays, setBays] = useState([{ length: 25.888, rise: 0.214 }, { length: 29.741, rise: 0.285 }, { length: 26.662, rise: 0.119 }])\r\n    const [totalLength, setTotalLength] = useState(0)\r\n    const [tapeWeight, setTapeWeight] = useState(0)\r\n\r\n    const [slopCorr, setSlopCorr] = useState(0)\r\n    const [tensionCorr, setTensionCorr] = useState(0)\r\n    const [tempCorr, setTempCorr] = useState(0)\r\n    const [sagCorr, setSagCorr] = useState(0)\r\n    const [attrCorr, setAttrCorr] = useState(0)\r\n\r\n    const [corrLength, setCorrLength] = useState(0)\r\n\r\n    const handleconstChange = e => {\r\n        e.persist();\r\n        setConsts(consts => ({ ...consts, [e.target.name]: (e.target.value) }))\r\n    }\r\n\r\n    const handleDataChange = e => {\r\n        e.persist();\r\n        setData(data => ({ ...data, [e.target.name]: (e.target.value) }))\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        setBays([...bays, { ...defaultBay }])\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        setBays(bays => bays.filter(b_id => b_id !== id))\r\n    }\r\n\r\n    const handleBayChange = (e, id) => {\r\n        e.persist();\r\n        setBays(bays => {\r\n            let values = [...bays];\r\n            values[id][e.target.name] = (e.target.value);\r\n            console.log(values)\r\n            return values;\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTotalLength(bays.reduce((total, current) => total + Number(current.length), 0))\r\n    }, [bays])\r\n\r\n    useEffect(() => {\r\n        const slop = bays.reduce((total, current) => {\r\n            if (current.length) return total + Math.pow(Number(current.rise), 2) / (2 * current.length)\r\n            return total\r\n        }, 0)\r\n        setSlopCorr(-Number(slop.toFixed(round)))\r\n    }, [bays, round])\r\n\r\n    useEffect(() => {\r\n        const tenstion = (consts.area * consts.youngmodulus) && ((data.field_tension - data.standard_tension) * totalLength) / (consts.area * consts.youngmodulus)\r\n        setTensionCorr(Number(tenstion.toFixed(round)))\r\n        const temp = consts.coefficient_of_thermal * totalLength * (data.field_tem - data.standard_tem)\r\n        setTempCorr(Number(temp.toFixed(round)))\r\n    }, [consts, data, totalLength, round])\r\n\r\n    useEffect(() => {\r\n        setTapeWeight(Number((consts.area * consts.density * consts.g / 1000000).toFixed(round)))\r\n    }, [consts, round])\r\n\r\n    useEffect(() => {\r\n        const cube = bays.reduce((total, current) => {\r\n            return total + Math.pow(Number(current.length), 3)\r\n        }, 0)\r\n        const sag = Math.pow(tapeWeight, 2) * (cube) / (24 * Math.pow(data.field_tension, 2))\r\n        setSagCorr(-Number(sag.toFixed(round)))\r\n    }, [tapeWeight, totalLength, data, bays, round])\r\n\r\n    useEffect(() => {\r\n        setCorrLength(totalLength + slopCorr + tensionCorr + tempCorr + sagCorr)\r\n    }, [totalLength, slopCorr, tensionCorr, tempCorr, sagCorr, round])\r\n\r\n    useEffect(() => {\r\n        const attr = corrLength * data.above_sea_level / (consts.radius_of_the_earth * 1000)\r\n        setAttrCorr(Number(attr.toFixed(round)))\r\n    }, [data, corrLength, consts, round])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-md-12 grid-margin stretch-card\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h4 className=\"card-title\">Tape details</h4>\r\n                        <p className=\"card-description\"> Tape details </p>\r\n                        <form className=\"forms-sample\">\r\n                            {Object.keys(consts).map(key => (\r\n                                <Form.Group key={key} className=\"row\">\r\n                                    <label htmlFor={key} className=\"col-sm-3 col-form-label\">{key}</label>\r\n                                    <div className=\"col-sm-9\">\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name={key} className=\"form-control\"\r\n                                            id={key}\r\n                                            value={consts[key]}\r\n                                            onChange={handleconstChange}\r\n                                            placeholder={key}\r\n                                            style={{ backgroundColor: 'unset', color: 'white' }}\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            ))}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-12 grid-margin stretch-card\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h4 className=\"card-title\">Data</h4>\r\n                        <p className=\"card-description\"> data </p>\r\n                        <form className=\"forms-sample\">\r\n                            {Object.keys(data).map(key => (\r\n                                <Form.Group key={key} className=\"row\">\r\n                                    <label htmlFor={key} className=\"col-sm-3 col-form-label\">{key}</label>\r\n                                    <div className=\"col-sm-9\">\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name={key} className=\"form-control\"\r\n                                            id={key}\r\n                                            value={data[key]}\r\n                                            onChange={handleDataChange}\r\n                                            placeholder={key}\r\n                                            style={{ backgroundColor: 'unset', color: 'white' }}\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            ))}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-12 grid-margin stretch-card\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h4 className=\"card-title\">Bays (Spans)</h4>\r\n                        <p className=\"card-description\"> Bays (Spans) <button type=\"button\" className=\"btn btn-primary btn-fw\" onClick={handleAdd}>Add</button></p>\r\n                        <form className=\"forms-sample\">\r\n                            {bays.map((item, id) => (\r\n                                <Form.Group key={id}>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-5\">\r\n                                            <label>Measured length of span (m)</label>\r\n                                            <Form.Control type=\"text\" name=\"length\" value={item.length} onChange={e => handleBayChange(e, id)} className=\"form-control-lg\" placeholder=\"Username\" aria-label=\"Username\" style={{ backgroundColor: 'unset', color: 'white' }} />\r\n                                        </div>\r\n                                        <div className=\"col-sm-5\">\r\n                                            <label>Rise between ends (m)</label>\r\n                                            <Form.Control type=\"text\" name=\"rise\" value={item.rise} onChange={e => handleBayChange(e, id)} className=\"form-control-lg\" placeholder=\"Username\" aria-label=\"Username\" style={{ backgroundColor: 'unset', color: 'white' }} />\r\n                                        </div>\r\n                                        <div className=\"col-sm-2\">\r\n                                            <button type=\"button\" className=\"btn btn-primary btn-fw mt-4\" onClick={() => handleRemove(id)}>Remove</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </Form.Group>\r\n                            ))}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-12 grid-margin stretch-card\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <form className=\"forms-sample\">\r\n                            <Form.Group>\r\n                                <label className=\"col-sm-3 col-form-label\">Round to</label>\r\n                                <div className=\"col-sm-9\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        value={round}\r\n                                        onChange={e => setRound(e.target.value)}\r\n                                        placeholder=\"Round\"\r\n                                        style={{ backgroundColor: 'unset', color: 'white' }}\r\n                                    />\r\n                                </div>\r\n                            </Form.Group>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-12 grid-margin stretch-card\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h4 className=\"card-title\">Correction</h4>\r\n                        <p className=\"card-description\"> Correction </p>\r\n                        <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-3 col-form-label\">Total length</label>\r\n                            <div className=\"col-sm-9\">\r\n                                {bays.map((item, id) => (\r\n                                    <span>= {item.length} + </span>\r\n                                ))} m\r\n                                <p>= {totalLength} m</p>\r\n                            </div>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-3 col-form-label\">Slope correction</label>\r\n                            <div className=\"col-sm-9\">\r\n                                <p>\r\n                                    <math>\r\n                                        = h<sup>2</sup>/2L\r\n                                    </math>\r\n                                </p>\r\n                                {bays.map((item, id) => {\r\n                                    if (!item.length) return (<></>)\r\n                                    return (\r\n                                        <span key={id}>\r\n                                            <math>\r\n                                                {item.rise}<sup>2</sup>/2 X {item.length}\r\n                                            </math>\r\n                                            <math> + </math>\r\n                                        </span>\r\n                                    )\r\n                                })} m\r\n                                <p>= {slopCorr} m</p>\r\n                            </div>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-3 col-form-label\">Tension correction</label>\r\n                            <div className=\"col-sm-9\">\r\n                                <p>\r\n                                    <math>\r\n                                        = (P - Ps)L / AE\r\n                                    </math>\r\n                                </p>\r\n                                <div>\r\n                                    <math>\r\n                                        = ({data.field_tension} - {data.standard_tension}) X {totalLength} / {consts.area} X {consts.youngmodulus} m\r\n                                    </math>\r\n                                </div>\r\n                                <div>\r\n                                    <math>\r\n                                        = {tensionCorr} m\r\n                                    </math>\r\n                                </div>\r\n                            </div>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-3 col-form-label\">Temprature correction</label>\r\n                            <div className=\"col-sm-9\">\r\n                                <p>\r\n                                    <math>\r\n                                        = aL(t-ts)\r\n                                    </math>\r\n                                </p>\r\n                                <div>\r\n                                    <math>\r\n                                        = {consts.coefficient_of_thermal} X {totalLength}({data.field_tem}-{data.standard_tem}) m\r\n                                    </math>\r\n                                </div>\r\n                                <div>\r\n                                    <math>\r\n                                        = {tempCorr} m\r\n                                    </math>\r\n                                </div>\r\n                            </div>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-3 col-form-label\">Wight of the tape per unit length w</label>\r\n                            <div className=\"col-sm-9\">\r\n                                <p>\r\n                                    <math>\r\n                                        = adg\r\n                                    </math>\r\n                                </p>\r\n                                <div>\r\n                                    <math>\r\n                                        = {consts.area} X {consts.density} X {consts.g}\r\n                                    </math>\r\n                                </div>\r\n                                <div>\r\n                                    <math>\r\n                                        = {tapeWeight}\r\n                                    </math>\r\n                                </div>\r\n                            </div>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-3 col-form-label\">Sag correction c</label>\r\n                            <div className=\"col-sm-9\">\r\n                                <p>\r\n                                    <math>\r\n                                        = (W<sup>2</sup>L<sup>3</sup>) / 24p<sup>2</sup>\r\n                                    </math>\r\n                                </p>\r\n                                <div>\r\n                                    <math>\r\n                                        = ({tapeWeight}<sup>2</sup> X {totalLength}<sup>3</sup>) / 24 X {data.field_tension}<sup>2</sup>\r\n                                    </math>\r\n                                    {bays.map((item, id) => {\r\n                                        if (!item.length) return (<></>)\r\n                                        return (\r\n                                            <span key={id}>\r\n                                                <math>\r\n                                                    {tapeWeight}<sup>2</sup> X {item.length}<sup>3</sup>) / 24 X {data.field_tension}<sup>2</sup>\r\n                                                </math>\r\n                                                <math> + </math>\r\n                                            </span>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                                <div>\r\n                                    <math>\r\n                                        = {sagCorr}\r\n                                    </math>\r\n                                </div>\r\n                            </div>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-3 col-form-label\">Corrected length without attitude correction</label>\r\n                            <div className=\"col-sm-9\">\r\n                                <p>\r\n                                    <math>\r\n                                        = total length + slop correction + tension correction + temperature correction + sag correction\r\n                                    </math>\r\n                                </p>\r\n                                <div>\r\n                                    <math>\r\n                                        = {totalLength} + {slopCorr} + {tensionCorr} + {tempCorr} + {sagCorr}\r\n                                    </math>\r\n                                </div>\r\n                                <div>\r\n                                    <math>\r\n                                        = {corrLength}\r\n                                    </math>\r\n                                </div>\r\n                            </div>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-3 col-form-label\">Attitude correction</label>\r\n                            <div className=\"col-sm-9\">\r\n                                <p>\r\n                                    <math>\r\n                                        = LH / R\r\n                                    </math>\r\n                                </p>\r\n                                <div>\r\n                                    <math>\r\n                                        = {corrLength} X {data.above_sea_level} / {consts.radius_of_the_earth} X 10<sup>3</sup>\r\n                                    </math>\r\n                                </div>\r\n                                <div>\r\n                                    <math>\r\n                                        = {attrCorr}\r\n                                    </math>\r\n                                </div>\r\n                            </div>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-3 col-form-label\">Corrected length</label>\r\n                            <div className=\"col-sm-9\">\r\n                                <p>\r\n                                    <math>\r\n                                        = Corrected length without attitude correction  - attitude correction\r\n                                    </math>\r\n                                </p>\r\n                                <div>\r\n                                    <math>\r\n                                        = {corrLength} - {attrCorr}\r\n                                    </math>\r\n                                </div>\r\n                                <div>\r\n                                    <math>\r\n                                        = {corrLength - attrCorr}\r\n                                    </math>\r\n                                </div>\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Correction;"],"sourceRoot":""}